/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.activities_v1.ErrorDescription', null, global);
goog.exportSymbol('proto.activities_v1.PagingParams', null, global);
goog.exportSymbol('proto.activities_v1.PartyActivity', null, global);
goog.exportSymbol('proto.activities_v1.PartyActivityBatchRequest', null, global);
goog.exportSymbol('proto.activities_v1.PartyActivityDeleteRequest', null, global);
goog.exportSymbol('proto.activities_v1.PartyActivityLogRequest', null, global);
goog.exportSymbol('proto.activities_v1.PartyActivityObjectReply', null, global);
goog.exportSymbol('proto.activities_v1.PartyActivityOnlyErrorReply', null, global);
goog.exportSymbol('proto.activities_v1.PartyActivityPage', null, global);
goog.exportSymbol('proto.activities_v1.PartyActivityPageReply', null, global);
goog.exportSymbol('proto.activities_v1.PartyActivityPageRequest', null, global);
goog.exportSymbol('proto.activities_v1.Reference', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.ErrorDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activities_v1.ErrorDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.ErrorDescription.displayName = 'proto.activities_v1.ErrorDescription';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.ErrorDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.ErrorDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.ErrorDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.ErrorDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    category: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    correlationId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    message: jspb.Message.getFieldWithDefault(msg, 6, ""),
    cause: jspb.Message.getFieldWithDefault(msg, 7, ""),
    stackTrace: jspb.Message.getFieldWithDefault(msg, 8, ""),
    detailsMap: (f = msg.getDetailsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.ErrorDescription}
 */
proto.activities_v1.ErrorDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.ErrorDescription;
  return proto.activities_v1.ErrorDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.ErrorDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.ErrorDescription}
 */
proto.activities_v1.ErrorDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCause(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStackTrace(value);
      break;
    case 9:
      var value = msg.getDetailsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.ErrorDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.ErrorDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.ErrorDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.ErrorDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCause();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStackTrace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDetailsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.activities_v1.ErrorDescription.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.activities_v1.ErrorDescription.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string category = 2;
 * @return {string}
 */
proto.activities_v1.ErrorDescription.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.activities_v1.ErrorDescription.prototype.setCategory = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.activities_v1.ErrorDescription.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.activities_v1.ErrorDescription.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string correlation_id = 4;
 * @return {string}
 */
proto.activities_v1.ErrorDescription.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.activities_v1.ErrorDescription.prototype.setCorrelationId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.activities_v1.ErrorDescription.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.activities_v1.ErrorDescription.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string message = 6;
 * @return {string}
 */
proto.activities_v1.ErrorDescription.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.activities_v1.ErrorDescription.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string cause = 7;
 * @return {string}
 */
proto.activities_v1.ErrorDescription.prototype.getCause = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.activities_v1.ErrorDescription.prototype.setCause = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string stack_trace = 8;
 * @return {string}
 */
proto.activities_v1.ErrorDescription.prototype.getStackTrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.activities_v1.ErrorDescription.prototype.setStackTrace = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * map<string, string> details = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.activities_v1.ErrorDescription.prototype.getDetailsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


proto.activities_v1.ErrorDescription.prototype.clearDetailsMap = function() {
  this.getDetailsMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.PagingParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activities_v1.PagingParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.PagingParams.displayName = 'proto.activities_v1.PagingParams';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.PagingParams.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.PagingParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.PagingParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PagingParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
    take: jspb.Message.getFieldWithDefault(msg, 2, 0),
    total: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.PagingParams}
 */
proto.activities_v1.PagingParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.PagingParams;
  return proto.activities_v1.PagingParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.PagingParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.PagingParams}
 */
proto.activities_v1.PagingParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSkip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTake(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.PagingParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.PagingParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.PagingParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PagingParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTake();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotal();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 skip = 1;
 * @return {number}
 */
proto.activities_v1.PagingParams.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.activities_v1.PagingParams.prototype.setSkip = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 take = 2;
 * @return {number}
 */
proto.activities_v1.PagingParams.prototype.getTake = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.activities_v1.PagingParams.prototype.setTake = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool total = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.activities_v1.PagingParams.prototype.getTotal = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.activities_v1.PagingParams.prototype.setTotal = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.Reference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activities_v1.Reference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.Reference.displayName = 'proto.activities_v1.Reference';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.Reference.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.Reference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.Reference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.Reference.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.Reference}
 */
proto.activities_v1.Reference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.Reference;
  return proto.activities_v1.Reference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.Reference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.Reference}
 */
proto.activities_v1.Reference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.Reference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.Reference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.Reference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.Reference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.activities_v1.Reference.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.activities_v1.Reference.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.activities_v1.Reference.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.activities_v1.Reference.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.activities_v1.Reference.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.activities_v1.Reference.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.PartyActivity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.activities_v1.PartyActivity.repeatedFields_, null);
};
goog.inherits(proto.activities_v1.PartyActivity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.PartyActivity.displayName = 'proto.activities_v1.PartyActivity';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.activities_v1.PartyActivity.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.PartyActivity.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.PartyActivity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.PartyActivity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    time: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    party: (f = msg.getParty()) && proto.activities_v1.Reference.toObject(includeInstance, f),
    refItem: (f = msg.getRefItem()) && proto.activities_v1.Reference.toObject(includeInstance, f),
    refParentsList: jspb.Message.toObjectList(msg.getRefParentsList(),
    proto.activities_v1.Reference.toObject, includeInstance),
    refParty: (f = msg.getRefParty()) && proto.activities_v1.Reference.toObject(includeInstance, f),
    detailsMap: (f = msg.getDetailsMap()) ? f.toObject(includeInstance, undefined) : [],
    orgId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.PartyActivity}
 */
proto.activities_v1.PartyActivity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.PartyActivity;
  return proto.activities_v1.PartyActivity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.PartyActivity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.PartyActivity}
 */
proto.activities_v1.PartyActivity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = new proto.activities_v1.Reference;
      reader.readMessage(value,proto.activities_v1.Reference.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    case 5:
      var value = new proto.activities_v1.Reference;
      reader.readMessage(value,proto.activities_v1.Reference.deserializeBinaryFromReader);
      msg.setRefItem(value);
      break;
    case 6:
      var value = new proto.activities_v1.Reference;
      reader.readMessage(value,proto.activities_v1.Reference.deserializeBinaryFromReader);
      msg.addRefParents(value);
      break;
    case 7:
      var value = new proto.activities_v1.Reference;
      reader.readMessage(value,proto.activities_v1.Reference.deserializeBinaryFromReader);
      msg.setRefParty(value);
      break;
    case 8:
      var value = msg.getDetailsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.PartyActivity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.PartyActivity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.PartyActivity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.activities_v1.Reference.serializeBinaryToWriter
    );
  }
  f = message.getRefItem();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.activities_v1.Reference.serializeBinaryToWriter
    );
  }
  f = message.getRefParentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.activities_v1.Reference.serializeBinaryToWriter
    );
  }
  f = message.getRefParty();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.activities_v1.Reference.serializeBinaryToWriter
    );
  }
  f = message.getDetailsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.activities_v1.PartyActivity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.activities_v1.PartyActivity.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string time = 2;
 * @return {string}
 */
proto.activities_v1.PartyActivity.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.activities_v1.PartyActivity.prototype.setTime = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.activities_v1.PartyActivity.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.activities_v1.PartyActivity.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Reference party = 4;
 * @return {?proto.activities_v1.Reference}
 */
proto.activities_v1.PartyActivity.prototype.getParty = function() {
  return /** @type{?proto.activities_v1.Reference} */ (
    jspb.Message.getWrapperField(this, proto.activities_v1.Reference, 4));
};


/** @param {?proto.activities_v1.Reference|undefined} value */
proto.activities_v1.PartyActivity.prototype.setParty = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.activities_v1.PartyActivity.prototype.clearParty = function() {
  this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activities_v1.PartyActivity.prototype.hasParty = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Reference ref_item = 5;
 * @return {?proto.activities_v1.Reference}
 */
proto.activities_v1.PartyActivity.prototype.getRefItem = function() {
  return /** @type{?proto.activities_v1.Reference} */ (
    jspb.Message.getWrapperField(this, proto.activities_v1.Reference, 5));
};


/** @param {?proto.activities_v1.Reference|undefined} value */
proto.activities_v1.PartyActivity.prototype.setRefItem = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.activities_v1.PartyActivity.prototype.clearRefItem = function() {
  this.setRefItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activities_v1.PartyActivity.prototype.hasRefItem = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Reference ref_parents = 6;
 * @return {!Array<!proto.activities_v1.Reference>}
 */
proto.activities_v1.PartyActivity.prototype.getRefParentsList = function() {
  return /** @type{!Array<!proto.activities_v1.Reference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.activities_v1.Reference, 6));
};


/** @param {!Array<!proto.activities_v1.Reference>} value */
proto.activities_v1.PartyActivity.prototype.setRefParentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.activities_v1.Reference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.activities_v1.Reference}
 */
proto.activities_v1.PartyActivity.prototype.addRefParents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.activities_v1.Reference, opt_index);
};


proto.activities_v1.PartyActivity.prototype.clearRefParentsList = function() {
  this.setRefParentsList([]);
};


/**
 * optional Reference ref_party = 7;
 * @return {?proto.activities_v1.Reference}
 */
proto.activities_v1.PartyActivity.prototype.getRefParty = function() {
  return /** @type{?proto.activities_v1.Reference} */ (
    jspb.Message.getWrapperField(this, proto.activities_v1.Reference, 7));
};


/** @param {?proto.activities_v1.Reference|undefined} value */
proto.activities_v1.PartyActivity.prototype.setRefParty = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.activities_v1.PartyActivity.prototype.clearRefParty = function() {
  this.setRefParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activities_v1.PartyActivity.prototype.hasRefParty = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * map<string, string> details = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.activities_v1.PartyActivity.prototype.getDetailsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


proto.activities_v1.PartyActivity.prototype.clearDetailsMap = function() {
  this.getDetailsMap().clear();
};


/**
 * optional string org_id = 9;
 * @return {string}
 */
proto.activities_v1.PartyActivity.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.activities_v1.PartyActivity.prototype.setOrgId = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.PartyActivityPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.activities_v1.PartyActivityPage.repeatedFields_, null);
};
goog.inherits(proto.activities_v1.PartyActivityPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.PartyActivityPage.displayName = 'proto.activities_v1.PartyActivityPage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.activities_v1.PartyActivityPage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.PartyActivityPage.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.PartyActivityPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.PartyActivityPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityPage.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.activities_v1.PartyActivity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.PartyActivityPage}
 */
proto.activities_v1.PartyActivityPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.PartyActivityPage;
  return proto.activities_v1.PartyActivityPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.PartyActivityPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.PartyActivityPage}
 */
proto.activities_v1.PartyActivityPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 2:
      var value = new proto.activities_v1.PartyActivity;
      reader.readMessage(value,proto.activities_v1.PartyActivity.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.PartyActivityPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.PartyActivityPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.PartyActivityPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.activities_v1.PartyActivity.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 total = 1;
 * @return {number}
 */
proto.activities_v1.PartyActivityPage.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.activities_v1.PartyActivityPage.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated PartyActivity data = 2;
 * @return {!Array<!proto.activities_v1.PartyActivity>}
 */
proto.activities_v1.PartyActivityPage.prototype.getDataList = function() {
  return /** @type{!Array<!proto.activities_v1.PartyActivity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.activities_v1.PartyActivity, 2));
};


/** @param {!Array<!proto.activities_v1.PartyActivity>} value */
proto.activities_v1.PartyActivityPage.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.activities_v1.PartyActivity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.activities_v1.PartyActivity}
 */
proto.activities_v1.PartyActivityPage.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.activities_v1.PartyActivity, opt_index);
};


proto.activities_v1.PartyActivityPage.prototype.clearDataList = function() {
  this.setDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.PartyActivityPageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activities_v1.PartyActivityPageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.PartyActivityPageRequest.displayName = 'proto.activities_v1.PartyActivityPageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.PartyActivityPageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.PartyActivityPageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.PartyActivityPageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityPageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    correlationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filterMap: (f = msg.getFilterMap()) ? f.toObject(includeInstance, undefined) : [],
    paging: (f = msg.getPaging()) && proto.activities_v1.PagingParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.PartyActivityPageRequest}
 */
proto.activities_v1.PartyActivityPageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.PartyActivityPageRequest;
  return proto.activities_v1.PartyActivityPageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.PartyActivityPageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.PartyActivityPageRequest}
 */
proto.activities_v1.PartyActivityPageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 2:
      var value = msg.getFilterMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 3:
      var value = new proto.activities_v1.PagingParams;
      reader.readMessage(value,proto.activities_v1.PagingParams.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.PartyActivityPageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.PartyActivityPageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.PartyActivityPageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityPageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilterMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.activities_v1.PagingParams.serializeBinaryToWriter
    );
  }
};


/**
 * optional string correlation_id = 1;
 * @return {string}
 */
proto.activities_v1.PartyActivityPageRequest.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.activities_v1.PartyActivityPageRequest.prototype.setCorrelationId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> filter = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.activities_v1.PartyActivityPageRequest.prototype.getFilterMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.activities_v1.PartyActivityPageRequest.prototype.clearFilterMap = function() {
  this.getFilterMap().clear();
};


/**
 * optional PagingParams paging = 3;
 * @return {?proto.activities_v1.PagingParams}
 */
proto.activities_v1.PartyActivityPageRequest.prototype.getPaging = function() {
  return /** @type{?proto.activities_v1.PagingParams} */ (
    jspb.Message.getWrapperField(this, proto.activities_v1.PagingParams, 3));
};


/** @param {?proto.activities_v1.PagingParams|undefined} value */
proto.activities_v1.PartyActivityPageRequest.prototype.setPaging = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.activities_v1.PartyActivityPageRequest.prototype.clearPaging = function() {
  this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activities_v1.PartyActivityPageRequest.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.PartyActivityPageReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activities_v1.PartyActivityPageReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.PartyActivityPageReply.displayName = 'proto.activities_v1.PartyActivityPageReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.PartyActivityPageReply.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.PartyActivityPageReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.PartyActivityPageReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityPageReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && proto.activities_v1.ErrorDescription.toObject(includeInstance, f),
    page: (f = msg.getPage()) && proto.activities_v1.PartyActivityPage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.PartyActivityPageReply}
 */
proto.activities_v1.PartyActivityPageReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.PartyActivityPageReply;
  return proto.activities_v1.PartyActivityPageReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.PartyActivityPageReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.PartyActivityPageReply}
 */
proto.activities_v1.PartyActivityPageReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.activities_v1.ErrorDescription;
      reader.readMessage(value,proto.activities_v1.ErrorDescription.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new proto.activities_v1.PartyActivityPage;
      reader.readMessage(value,proto.activities_v1.PartyActivityPage.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.PartyActivityPageReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.PartyActivityPageReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.PartyActivityPageReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityPageReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.activities_v1.ErrorDescription.serializeBinaryToWriter
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.activities_v1.PartyActivityPage.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrorDescription error = 1;
 * @return {?proto.activities_v1.ErrorDescription}
 */
proto.activities_v1.PartyActivityPageReply.prototype.getError = function() {
  return /** @type{?proto.activities_v1.ErrorDescription} */ (
    jspb.Message.getWrapperField(this, proto.activities_v1.ErrorDescription, 1));
};


/** @param {?proto.activities_v1.ErrorDescription|undefined} value */
proto.activities_v1.PartyActivityPageReply.prototype.setError = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.activities_v1.PartyActivityPageReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activities_v1.PartyActivityPageReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PartyActivityPage page = 2;
 * @return {?proto.activities_v1.PartyActivityPage}
 */
proto.activities_v1.PartyActivityPageReply.prototype.getPage = function() {
  return /** @type{?proto.activities_v1.PartyActivityPage} */ (
    jspb.Message.getWrapperField(this, proto.activities_v1.PartyActivityPage, 2));
};


/** @param {?proto.activities_v1.PartyActivityPage|undefined} value */
proto.activities_v1.PartyActivityPageReply.prototype.setPage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.activities_v1.PartyActivityPageReply.prototype.clearPage = function() {
  this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activities_v1.PartyActivityPageReply.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.PartyActivityLogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activities_v1.PartyActivityLogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.PartyActivityLogRequest.displayName = 'proto.activities_v1.PartyActivityLogRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.PartyActivityLogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.PartyActivityLogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.PartyActivityLogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityLogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    correlationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    activity: (f = msg.getActivity()) && proto.activities_v1.PartyActivity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.PartyActivityLogRequest}
 */
proto.activities_v1.PartyActivityLogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.PartyActivityLogRequest;
  return proto.activities_v1.PartyActivityLogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.PartyActivityLogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.PartyActivityLogRequest}
 */
proto.activities_v1.PartyActivityLogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 2:
      var value = new proto.activities_v1.PartyActivity;
      reader.readMessage(value,proto.activities_v1.PartyActivity.deserializeBinaryFromReader);
      msg.setActivity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.PartyActivityLogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.PartyActivityLogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.PartyActivityLogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityLogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActivity();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.activities_v1.PartyActivity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string correlation_id = 1;
 * @return {string}
 */
proto.activities_v1.PartyActivityLogRequest.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.activities_v1.PartyActivityLogRequest.prototype.setCorrelationId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PartyActivity activity = 2;
 * @return {?proto.activities_v1.PartyActivity}
 */
proto.activities_v1.PartyActivityLogRequest.prototype.getActivity = function() {
  return /** @type{?proto.activities_v1.PartyActivity} */ (
    jspb.Message.getWrapperField(this, proto.activities_v1.PartyActivity, 2));
};


/** @param {?proto.activities_v1.PartyActivity|undefined} value */
proto.activities_v1.PartyActivityLogRequest.prototype.setActivity = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.activities_v1.PartyActivityLogRequest.prototype.clearActivity = function() {
  this.setActivity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activities_v1.PartyActivityLogRequest.prototype.hasActivity = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.PartyActivityObjectReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activities_v1.PartyActivityObjectReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.PartyActivityObjectReply.displayName = 'proto.activities_v1.PartyActivityObjectReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.PartyActivityObjectReply.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.PartyActivityObjectReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.PartyActivityObjectReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityObjectReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && proto.activities_v1.ErrorDescription.toObject(includeInstance, f),
    activity: (f = msg.getActivity()) && proto.activities_v1.PartyActivity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.PartyActivityObjectReply}
 */
proto.activities_v1.PartyActivityObjectReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.PartyActivityObjectReply;
  return proto.activities_v1.PartyActivityObjectReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.PartyActivityObjectReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.PartyActivityObjectReply}
 */
proto.activities_v1.PartyActivityObjectReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.activities_v1.ErrorDescription;
      reader.readMessage(value,proto.activities_v1.ErrorDescription.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new proto.activities_v1.PartyActivity;
      reader.readMessage(value,proto.activities_v1.PartyActivity.deserializeBinaryFromReader);
      msg.setActivity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.PartyActivityObjectReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.PartyActivityObjectReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.PartyActivityObjectReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityObjectReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.activities_v1.ErrorDescription.serializeBinaryToWriter
    );
  }
  f = message.getActivity();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.activities_v1.PartyActivity.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrorDescription error = 1;
 * @return {?proto.activities_v1.ErrorDescription}
 */
proto.activities_v1.PartyActivityObjectReply.prototype.getError = function() {
  return /** @type{?proto.activities_v1.ErrorDescription} */ (
    jspb.Message.getWrapperField(this, proto.activities_v1.ErrorDescription, 1));
};


/** @param {?proto.activities_v1.ErrorDescription|undefined} value */
proto.activities_v1.PartyActivityObjectReply.prototype.setError = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.activities_v1.PartyActivityObjectReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activities_v1.PartyActivityObjectReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PartyActivity activity = 2;
 * @return {?proto.activities_v1.PartyActivity}
 */
proto.activities_v1.PartyActivityObjectReply.prototype.getActivity = function() {
  return /** @type{?proto.activities_v1.PartyActivity} */ (
    jspb.Message.getWrapperField(this, proto.activities_v1.PartyActivity, 2));
};


/** @param {?proto.activities_v1.PartyActivity|undefined} value */
proto.activities_v1.PartyActivityObjectReply.prototype.setActivity = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.activities_v1.PartyActivityObjectReply.prototype.clearActivity = function() {
  this.setActivity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activities_v1.PartyActivityObjectReply.prototype.hasActivity = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.PartyActivityBatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.activities_v1.PartyActivityBatchRequest.repeatedFields_, null);
};
goog.inherits(proto.activities_v1.PartyActivityBatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.PartyActivityBatchRequest.displayName = 'proto.activities_v1.PartyActivityBatchRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.activities_v1.PartyActivityBatchRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.PartyActivityBatchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.PartyActivityBatchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.PartyActivityBatchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityBatchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    correlationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    activitiesList: jspb.Message.toObjectList(msg.getActivitiesList(),
    proto.activities_v1.PartyActivity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.PartyActivityBatchRequest}
 */
proto.activities_v1.PartyActivityBatchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.PartyActivityBatchRequest;
  return proto.activities_v1.PartyActivityBatchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.PartyActivityBatchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.PartyActivityBatchRequest}
 */
proto.activities_v1.PartyActivityBatchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 2:
      var value = new proto.activities_v1.PartyActivity;
      reader.readMessage(value,proto.activities_v1.PartyActivity.deserializeBinaryFromReader);
      msg.addActivities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.PartyActivityBatchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.PartyActivityBatchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.PartyActivityBatchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityBatchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActivitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.activities_v1.PartyActivity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string correlation_id = 1;
 * @return {string}
 */
proto.activities_v1.PartyActivityBatchRequest.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.activities_v1.PartyActivityBatchRequest.prototype.setCorrelationId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PartyActivity activities = 2;
 * @return {!Array<!proto.activities_v1.PartyActivity>}
 */
proto.activities_v1.PartyActivityBatchRequest.prototype.getActivitiesList = function() {
  return /** @type{!Array<!proto.activities_v1.PartyActivity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.activities_v1.PartyActivity, 2));
};


/** @param {!Array<!proto.activities_v1.PartyActivity>} value */
proto.activities_v1.PartyActivityBatchRequest.prototype.setActivitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.activities_v1.PartyActivity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.activities_v1.PartyActivity}
 */
proto.activities_v1.PartyActivityBatchRequest.prototype.addActivities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.activities_v1.PartyActivity, opt_index);
};


proto.activities_v1.PartyActivityBatchRequest.prototype.clearActivitiesList = function() {
  this.setActivitiesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.PartyActivityDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activities_v1.PartyActivityDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.PartyActivityDeleteRequest.displayName = 'proto.activities_v1.PartyActivityDeleteRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.PartyActivityDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.PartyActivityDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.PartyActivityDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    correlationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filterMap: (f = msg.getFilterMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.PartyActivityDeleteRequest}
 */
proto.activities_v1.PartyActivityDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.PartyActivityDeleteRequest;
  return proto.activities_v1.PartyActivityDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.PartyActivityDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.PartyActivityDeleteRequest}
 */
proto.activities_v1.PartyActivityDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 2:
      var value = msg.getFilterMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.PartyActivityDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.PartyActivityDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.PartyActivityDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilterMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string correlation_id = 1;
 * @return {string}
 */
proto.activities_v1.PartyActivityDeleteRequest.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.activities_v1.PartyActivityDeleteRequest.prototype.setCorrelationId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> filter = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.activities_v1.PartyActivityDeleteRequest.prototype.getFilterMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.activities_v1.PartyActivityDeleteRequest.prototype.clearFilterMap = function() {
  this.getFilterMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activities_v1.PartyActivityOnlyErrorReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activities_v1.PartyActivityOnlyErrorReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.activities_v1.PartyActivityOnlyErrorReply.displayName = 'proto.activities_v1.PartyActivityOnlyErrorReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activities_v1.PartyActivityOnlyErrorReply.prototype.toObject = function(opt_includeInstance) {
  return proto.activities_v1.PartyActivityOnlyErrorReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activities_v1.PartyActivityOnlyErrorReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityOnlyErrorReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && proto.activities_v1.ErrorDescription.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activities_v1.PartyActivityOnlyErrorReply}
 */
proto.activities_v1.PartyActivityOnlyErrorReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activities_v1.PartyActivityOnlyErrorReply;
  return proto.activities_v1.PartyActivityOnlyErrorReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activities_v1.PartyActivityOnlyErrorReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activities_v1.PartyActivityOnlyErrorReply}
 */
proto.activities_v1.PartyActivityOnlyErrorReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.activities_v1.ErrorDescription;
      reader.readMessage(value,proto.activities_v1.ErrorDescription.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activities_v1.PartyActivityOnlyErrorReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activities_v1.PartyActivityOnlyErrorReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activities_v1.PartyActivityOnlyErrorReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activities_v1.PartyActivityOnlyErrorReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.activities_v1.ErrorDescription.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrorDescription error = 1;
 * @return {?proto.activities_v1.ErrorDescription}
 */
proto.activities_v1.PartyActivityOnlyErrorReply.prototype.getError = function() {
  return /** @type{?proto.activities_v1.ErrorDescription} */ (
    jspb.Message.getWrapperField(this, proto.activities_v1.ErrorDescription, 1));
};


/** @param {?proto.activities_v1.ErrorDescription|undefined} value */
proto.activities_v1.PartyActivityOnlyErrorReply.prototype.setError = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.activities_v1.PartyActivityOnlyErrorReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activities_v1.PartyActivityOnlyErrorReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.activities_v1);
